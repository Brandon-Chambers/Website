class t{constructor(t){this.img=new Image,this.img.src=t}render_sprite(t,e){const i=t*m,n=e*m;Nt.drawImage(this.img,i-$t,n-Wt)}}ALL_LOADED_SPRITES={},ALL_LOADED_SPRITES.dorf=new t("sprites/dorf_clear.png"),ALL_LOADED_SPRITES.rock=new t("sprites/rock.png"),ALL_LOADED_SPRITES.bag=new t("sprites/bag.png"),ALL_LOADED_SPRITES.tree=new t("sprites/tree.png"),ALL_LOADED_SPRITES.log=new t("sprites/log.png"),ALL_LOADED_SPRITES.potato_seed=new t("sprites/potato_seed.png"),ALL_LOADED_SPRITES.potato_grown=new t("sprites/potato_grown.png"),ALL_LOADED_SPRITES.potato=new t("sprites/potato.png"),ALL_LOADED_SPRITES.egg=new t("sprites/egg.png"),ALL_LOADED_SPRITES.berry_bush_empty=new t("sprites/berry_bush_empty.png"),ALL_LOADED_SPRITES.berry_bush_full=new t("sprites/berry_bush_full.png"),ALL_LOADED_SPRITES.fruit=new t("sprites/fruits.png"),ALL_LOADED_SPRITES.cow=new t("sprites/cow.png"),ALL_LOADED_SPRITES.chicken=new t("sprites/chicken.png"),ALL_LOADED_SPRITES.dirt=new t("sprites/dirt.png"),ALL_LOADED_SPRITES.dirt2=new t("sprites/dirt2.png"),ALL_LOADED_SPRITES.dirt3=new t("sprites/dirt3.png"),ALL_LOADED_SPRITES.cliff=new t("sprites/cliff.png");const e={STONE_BLOCKS:{name:"Cut Stone Blocks",items_needed:{stone:1},items_created:{stone_blocks:3}}},i={BLOCK_CUTTER:{name:"Block Cutter",recipes:["STONE_BLOCKS"]}},n={POTATO:{name:"Potato",growth_time:1e3,crop_yield:{potato:10}}};class s{static last_frame_time=0;static deltaTRaw=0;static deltaT=0;static maxDelta=50;static current_time=0;static updateDeltaT(){if(0===s.last_frame_time)return void(s.last_frame_time=Date.now());const t=Date.now();t-s.last_frame_time>s.maxDelta?s.deltaTRaw=s.maxDelta:s.deltaTRaw=t-s.last_frame_time,s.deltaT=s.deltaTRaw*dt,s.last_frame_time=t}}const r=72e3,o=3e3;class a{constructor(){this.loose_ms=36e3,this.day=0}update(){this.loose_ms+=s.deltaT,this.loose_ms>=r&&(this.loose_ms-=r,this.day++)}print_readable_text(){const t=Math.floor(this.loose_ms/o),e=Math.floor(this.loose_ms%o/o*60),i=String(t).padStart(2,"0"),n=String(e).padStart(2,"0");$("#calendar").text(i+":"+n)}calculateNightAlpha(){const t=this.loose_ms/o;return t>=20||t<4?.6:t>=4&&t<8?.6*(1-(t-4)/4):t>=8&&t<16?0:t>=16&&t<20?(t-16)/4*.6:0}render_overlay(){const t=this.calculateNightAlpha();Nt.fillStyle=`rgba(0, 0, 30, ${t})`,Nt.fillRect(0,0,Bt.width,Bt.height)}}function l(t){}function h(t){const e=[];for(let i=-t;i<=t;i++)for(let n=-t;n<=t;n++)i*i+n*n<=t*t&&e.push({x:i,y:n,distance:Math.sqrt(i*i+n*n)});return e.sort(((t,e)=>t.distance-e.distance))}function _(t,e){return!(t<0||t>=x||e<0||e>=w)}function d(){const t=new Set;for(one_char of Pt)for(task of one_char.itinerary.task_list)"PICKUP"==task.task_key&&t.add(task.x+" "+task.y);return t}function c(t){const e=[];for(const i of t)e.push(new Tt("GO_TO",i.x,i.y));return e}function u(t,e,i,n){const s=[];t>i&&([t,i]=[i,t]),e>n&&([e,n]=[n,e]);for(let r=t;r<=i;r++)for(let t=e;t<=n;t++)s.push({x:r,y:t});return s}function y(t,e){const i=Math.min(t,e),n=Math.max(t,e);return Math.floor(Math.random()*(n-i+1))+i}function f(t,e){let i=t.toString(),n=0;for(let t=0;t<i.length;t++){n=(n<<5)-n+i.charCodeAt(t),n&=n}return n=Math.abs(n),n%e+1}function p(t){if(0===t.length)return;return t[Math.floor(Math.random()*t.length)]}function g(t){return t.replace(/_/g," ").split(" ").map((t=>t.charAt(0).toUpperCase()+t.slice(1).toLowerCase())).join(" ")}CALENDAR=new a;const m=32,x=250,w=250,E=window.screen.height-300,b=window.screen.width-400,T=[{x:0,y:1},{x:1,y:0},{x:0,y:-1},{x:-1,y:0}],v=[{x:0,y:-1},{x:1,y:-1},{x:1,y:0},{x:1,y:1},{x:0,y:1},{x:-1,y:1},{x:-1,y:0},{x:-1,y:-1}];class k{constructor(){this.p=new Array(512),this.generatePermutation()}generatePermutation(){const t=Array.from({length:256},((t,e)=>e));for(let e=t.length-1;e>0;e--){const i=Math.floor(S()*(e+1));[t[e],t[i]]=[t[i],t[e]]}for(let e=0;e<512;e++)this.p[e]=t[e%256]}noise(t,e){const i=255&Math.floor(t),n=255&Math.floor(e);t-=Math.floor(t),e-=Math.floor(e);const s=this.fade(t),r=this.fade(e),o=this.p[i]+n,a=this.p[i+1]+n;return this.lerp(r,this.lerp(s,this.grad(this.p[o],t,e),this.grad(this.p[a],t-1,e)),this.lerp(s,this.grad(this.p[o+1],t,e-1),this.grad(this.p[a+1],t-1,e-1)))}fade(t){return t*t*t*(t*(6*t-15)+10)}lerp(t,e,i){return e+t*(i-e)}grad(t,e,i){switch(3&t){case 0:return e+i;case 1:return-e+i;case 2:return e-i;case 3:return-e-i;default:return 0}}}var A=3;function S(){const t=1e4*Math.sin(A++);return t-Math.floor(t)}const I=["Aelfric","Baldric","Cedric","Dunstan","Eadmund","Godric","Hereward","Leofric","Oswald","Wulfstan","Aldhelm","Beowulf","Cerdic","Drystan","Egbert","Gawain","Hrothgar","Leofwine","Osric","Wilfred","Aeneas","Brutus","Claudius","Darius","Ezra","Gideon","Horatio","Lucius","Orion","Thaddeus","Aelfgifu","Bertha","Cynethryth","Dorothea","Edith","Frideswide","Gunnhild","Hilda","Isolde","Judith","Kenelswith","Leofflæd","Mildred","Nesta","Osburh","Prudence","Quendreda","Rowena","Selah","Theodora","Æthelthryth","Beatrice","Constance","Damaris","Elspeth","Fides","Gwendolyn","Helena","Iphigenia","Jezebel"];class L{#t=Array(w).fill().map((()=>Array(x).fill("dirt")));#e=Array(w).fill().map((()=>Array(x).fill(null)));#i=Array(w).fill().map((()=>Array(x).fill(null)));constructor(){this.generatePerlinTerrain(x,w)}generatePerlinTerrain(t,e,i=128,n=1){const s=[new k,new k,new k],r=1/i;for(let i=0;i<e;i++)for(let e=0;e<t;e++){let t=0;const n=[1,.5,.25],o=[r,2*r,4*r];for(let r=0;r<3;r++){const a=e*o[r],l=i*o[r];t+=s[r].noise(a,l)*n[r]}t<-.25?this.#t[i][e]="water":t<-.05?this.#t[i][e]="mud":t<.28?this.#t[i][e]="dirt":t<.35?this.#t[i][e]="stone":(this.#t[i][e]="stone",this.#e[i][e]="cliff")}for(let i=0;i<e;i++)for(let e=0;e<t;e++){const t=this.isValidLocationForTree(e,i),n=S();t&&n>.95&&this.setEntity(e,i,new P)}for(let i=0;i<e;i++)for(let e=0;e<t;e++){const t=this.isValidLocationForTree(e,i),n=S();t&&n>.99&&this.setEntity(e,i,new F)}}isValidLocationForTree(t,e){const i=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];if(null!==this.getEntity(t,e))return!1;if("dirt"!=this.getTile(t,e))return!1;for(const[n,s]of i){const i=t+n,r=e+s;if(i<0||i>=x||r<0||r>=w)continue;const o=this.getEntity(i,r);if(o instanceof P||o instanceof F)return!1}return!0}getTile(t,e){return this.#t[e][t]}getWall(t,e){return this.#e[e][t]}getEntity(t,e){return this.#i[e][t]}setTile(t,e,i){t>=0&&e<x&&e>=0&&e<w&&(this.#t[e][t]=i)}setWall(t,e,i){t>=0&&e<x&&e>=0&&e<w&&(this.#e[e][t]=i)}setEntity(t,e,i){_(t,e)&&(this.#i[e][t]&&this.#i[e][t].on_remove_from_map(),this.#i[e][t]=i)}getCostToMoveThroughTile(t,e){return null!==this.#e[e][t]?1/0:R[this.getTile(t,e)].cost}get_closest_tile_of_type(t,e,i){let n=null,s=1/0;for(let r=0;r<this.#t.length;r++)for(let o=0;o<this.#t[r].length;o++)if(this.#t[r][o]===i){const i=Rt.heuristic(t,e,o,r);i<s&&(s=i,n={x:o,y:r})}return n?Rt.findPath(t,e,n.x,n.y):null}getAllEntitiesAsWrappedArray(){const t=[];for(let e=0;e<w;e++)for(let i=0;i<x;i++)this.#i[e][i]&&t.push({entity:this.#i[e][i],x:i,y:e});return t}getEntityWhereFn(t){const e=[];for(let i=0;i<w;i++)for(let n=0;n<x;n++){const s=this.#i[i][n];null!==s&&t(s)&&e.push({entity:s,x:n,y:i})}return e}getItemViaItsKey(t){return this.getEntityWhereFn((function(e){return e instanceof N&&e.item_id==t}))}getItemsNotInStockpiles(){return this.getAllEntitiesAsWrappedArray().filter((t=>t.entity instanceof N&&!ZONE_MANAGER.grid_location_is_stockpile(t.x,t.y)))}getClosestFoodItem(t,e){const i=this.getAllEntitiesAsWrappedArray().filter((t=>t.entity instanceof N&&"potato"==t.entity.item_id));let n=null;for(const s of i){const i=Rt.findPath(t,e,s.x,s.y);i&&(null==n||i.length<n.length)&&(n=i)}return n}dump_inventory(t,e,i){const n=i.give_list_of_items_held();for(const i in n){const s=n[i];this.dump_one_inventory_item(t,e,i,s)}i.makeEmpty()}dump_one_inventory_item(t,e,i,n){const s=h(4);let r=0;for(;r<s.length;){const o=s[r],a=t+o.x,l=e+o.y;if(!_(a,l)){r++;continue}if(null===this.getEntity(a,l))return void this.setEntity(a,l,new N(i,n));r++}}update_all_entities(){for(let t=0;t<w;t++)for(let e=0;e<x;e++){const i=this.#i[t][e];null!==i&&i.frame_update(e,t)}}isWalkable(t,e){if(t<0||t>=x||e<0||e>=w)return!1;return R[this.#t[e][t]].cost!==1/0&&null===this.#e[e][t]}render_single_tile(t,e){const i=this.#t[e][t],n=this.#e[e][t];if("dirt"==i){const i=f(e+" "+t,3);let n=ALL_LOADED_SPRITES.dirt;2==i?n=ALL_LOADED_SPRITES.dirt2:3==i&&(n=ALL_LOADED_SPRITES.dirt3),n.render_sprite(t,e)}else Nt.fillStyle=R[i].color,Nt.fillRect(t*m-$t,e*m-Wt,m,m);n&&("cliff"==n?ALL_LOADED_SPRITES.cliff.render_sprite(t,e):(Nt.fillStyle=Z[n].color,Nt.fillRect(t*m-$t,e*m-Wt,m,m)))}render_tiles(){const t=Math.floor($t/m),e=Math.floor(Wt/m),i=Math.min(Math.ceil(($t+b)/m),x),n=Math.min(Math.ceil((Wt+E)/m),w);for(let s=e;s<n;s++)for(let e=t;e<i;e++)this.render_single_tile(e,s)}render_entities(){for(let t=0;t<w;t++)for(let e=0;e<x;e++){const i=this.#i[t][e];null!=i&&i.draw(e,t)}}}class O{#n=new Int32Array(x*w);constructor(){this.#n.fill(0)}#s(t,e){return e*x+t}populate_passibility_array(){let t=1;this.#n.fill(0);for(let t=0;t<w;t++)for(let e=0;e<x;e++)null!==Mt.getWall(e,t)&&(this.#n[this.#s(e,t)]=-1);for(let e=0;e<w;e++)for(let i=0;i<x;i++){const n=this.#s(i,e);0===this.#n[n]&&(this.scanline_flood_fill(i,e,t),t++)}}scanline_flood_fill(t,e,i){const n=[{x:t,y:e}];for(;n.length>0;){const{x:t,y:e}=n.pop();let s=t;for(;s>=0&&0===this.#n[this.#s(s,e)];)s--;s++;let r=t;for(;r<x&&0===this.#n[this.#s(r,e)];)r++;r--;for(let t=s;t<=r;t++){if(this.#n[this.#s(t,e)]=i,e>0){const i=this.#s(t,e-1);0===this.#n[i]&&n.push({x:t,y:e-1})}if(e<w-1){const i=this.#s(t,e+1);0===this.#n[i]&&n.push({x:t,y:e+1})}}}}are_two_tiles_in_the_same_pathing_region(t,e,i,n){if(!_(t,e)||!_(i,n))return!1;const s=this.#n[this.#s(t,e)],r=this.#n[this.#s(i,n)];return-1!==s&&-1!==r&&s===r}findPathExtended(t,e,i,n,s){if(s){let s=null,r=1/0;for(const o of T){const a=i+o.x,l=n+o.y,h=this.findPath(t,e,a,l);h&&h.length<r&&(s=h,r=h.length)}return s}return this.findPath(t,e,i,n)}findPath(t,e,i,n){if(!this.are_two_tiles_in_the_same_pathing_region(t,e,i,n))return null;const s=[{x:t,y:e,g:0,f:this.heuristic(t,e,i,n)}],r=new Set,o=new Map;for(;s.length>0;){s.sort(((t,e)=>t.f-e.f));const t=s.shift();if(t.x===i&&t.y===n){const t=[];let e={x:i,y:n};for(;o.has(`${e.x},${e.y}`);)t.unshift(e),e=o.get(`${e.x},${e.y}`);return t}r.add(`${t.x},${t.y}`);for(const e of this.getNeighbors(t.x,t.y)){if(r.has(`${e.x},${e.y}`))continue;const a=t.g+e.cost,l=s.find((t=>t.x===e.x&&t.y===e.y));l?a<l.g&&(l.g=a,l.f=a+this.heuristic(e.x,e.y,i,n),o.set(`${e.x},${e.y}`,{x:t.x,y:t.y})):(s.push({x:e.x,y:e.y,g:a,f:a+this.heuristic(e.x,e.y,i,n)}),o.set(`${e.x},${e.y}`,{x:t.x,y:t.y}))}}return null}heuristic(t,e,i,n){return Math.sqrt(Math.pow(t-i,2)+Math.pow(e-n,2))}getNeighbors(t,e){const i=[];for(const[n,s]of[[0,1],[1,0],[0,-1],[-1,0]]){const r=t+n,o=e+s;if(!(r>=0&&r<x&&o>=0&&o<w))continue;const a=Mt.getCostToMoveThroughTile(r,o);a!==1/0&&i.push({x:r,y:o,cost:a})}for(const[n,s]of[[1,1],[1,-1],[-1,-1],[-1,1]]){const r=t+n,o=e+s;if(!(r>=0&&r<x&&o>=0&&o<w))continue;const a=Mt.getCostToMoveThroughTile(r,o);if(a!==1/0){if(Mt.isWalkable(t+n,e)||Mt.isWalkable(t,e+s)){const t=a*Math.SQRT2;i.push({x:r,y:o,cost:t})}}}return i}}class D{constructor(t,e,i=0,n=0){this.x=t,this.y=e,this.g=i,this.f=i+n}getKey(){return`${this.x},${this.y}`}static fromCoords(t,e){return new D(t,e)}}class M{constructor(t,e=1){this.color=t,this.cost=e}}var R={dirt:new M("#228b22",1),water:new M("#4169E1",1),mud:new M("#f4EE60",1),stone:new M("#8d9091",1)};class C{constructor(){this.is_deconstructable=!1,this.is_harvestable=!1,this.is_choppable=!1}frame_update(t,e){}draw(t,e){}render_details_menu(){const t=$("<div>");return t.text(this.constructor.name+"\n"+JSON.stringify(this,null,4)),t}on_remove_from_map(){}}class P extends C{constructor(){super(),this.is_choppable=!0}draw(t,e){ALL_LOADED_SPRITES.tree.render_sprite(t,e)}}class B extends C{constructor(t){super(),this.crop_type=t,this.growth=0}frame_update(t,e){this.growth+=s.deltaT,this.growth>this.get_plant_data().growth_time&&(this.is_harvestable=!0)}get_plant_data(){return n[this.crop_type]}draw(t,e){this.is_harvestable?ALL_LOADED_SPRITES.potato_grown.render_sprite(t,e):ALL_LOADED_SPRITES.potato_seed.render_sprite(t,e)}}class N extends C{constructor(t,e){super(),this.item_id=t,this.item_count=e}draw(t,e){let i="bag";"stone"==this.item_id&&(i="rock"),"log"==this.item_id&&(i="log"),"potato"==this.item_id&&(i="potato"),"fruit"==this.item_id&&(i="fruit"),"egg"==this.item_id&&(i="egg"),ALL_LOADED_SPRITES[i].render_sprite(t,e)}}class W extends C{constructor(t,e){super(),this.is_deconstructable=!0,z.push({x:t,y:e,bed:this,owner:null})}draw(t,e){Nt.fillStyle="brown",Nt.fillRect(t*m+3-$t,e*m+3-Wt,m-6,m-6)}on_remove_from_map(){z=z.filter((t=>t.bed==this))}}let z=[];class G extends C{constructor(){super(),this.is_deconstructable=!0}draw(t,e){Nt.fillStyle="brown",Nt.fillRect(t*m+8-$t,e*m+8-Wt,m-16,m-16)}}TIME_TO_GROW_BERRIES=1e4;class F extends C{constructor(){super(),this.growth=.65*TIME_TO_GROW_BERRIES*Math.random(),this.is_choppable=!0,this.is_harvestable=!1}frame_update(t,e){this.growth+=s.deltaT,this.growth>=TIME_TO_GROW_BERRIES&&(this.is_harvestable=!0)}draw(t,e){const i=this.growth>=TIME_TO_GROW_BERRIES?"berry_bush_full":"berry_bush_empty";ALL_LOADED_SPRITES[i].render_sprite(t,e)}}class U extends C{constructor(t){super(),this.workshop_token=t,this.craft_orders=[],this.is_deconstructable=!0}draw(t,e){Nt.fillStyle="purple",Nt.fillRect(t*m+3-$t,e*m+3-Wt,m-6,m-6)}append_craft_order(t){this.craft_orders.push(t)}render_details_menu(){const t=$("<div>");t.text(this.constructor.name+"\n"+JSON.stringify(this,null,4));const n=i[this.workshop_token].recipes;for(const i of n){const n=e[i],s=(n.name,$("<button>").text(n.name).attr("recipe_token",i)),r=this;s.click((function(){r.craft_orders.push(new K(i))})),t.append($("<br>"),$("<br>"),s,$("<br>"))}return t}frame_update(t,e){this.craft_orders.length&&Ct.addBluePrint(new Q(t,e,"C_generic",this.craft_orders[0].recipe_key))&&this.craft_orders.shift()}}class K{constructor(t){this.recipe_key=t}}class H{constructor(t,e){this.color=t,this.cost=e}}var Z={wood_wall:new H("#5C4033",{log:1}),stone_block_wall:new H("#8c98a1",{}),cliff:new H("#5f6169",{})};const Y=400;class j{constructor(){this.gridSize=x*w,this.grid=new Uint8Array(this.gridSize)}toIndex(t,e){return e*x+t}toCoordinates(t){return[t%x,Math.floor(t/x)]}update_state(){this.grid.fill(0);const t=new Uint8Array(this.gridSize),e=[];for(let i=0;i<this.gridSize;i++){const[n,s]=this.toCoordinates(i);if(!t[i]&&!this.is_wall(n,s)){const i=this.floodFill(n,s,t);i.length>0&&e.push(i)}}for(const t of e)if(t.length<Y)for(const e of t)this.grid[e]=1}floodFill(t,e,i){const n=[],s=new Int32Array(this.gridSize);let r=0,o=1;const a=this.toIndex(t,e);s[0]=a,i[a]=1;let l=!1;const h=[1,x,-1,-x];for(;r<o;){const t=s[r++];n.push(t);const[e,a]=this.toCoordinates(t);for(const n of h){const r=t+n,h=e+(1===n?1:-1===n?-1:0),_=a+(n===x?1:n===-x?-1:0);h<0||h>=x||_<0||_>=w?l=!0:i[r]||this.is_wall(h,_)||(s[o++]=r,i[r]=1)}}return l?[]:n}is_wall(t,e){const i=Mt.getWall(t,e),n=Mt.getEntity(t,e);return null!=i||n instanceof G}draw(){Nt.fillStyle="rgba(0,0,0, .25)";for(let t=0;t<this.gridSize;t++)if(this.grid[t]){const[e,i]=this.toCoordinates(t);Nt.fillRect(e*m-$t,i*m-Wt,m,m)}}}INDOOR_REGIONS=new j;const V={T_wooden_wall:{log:1},BE_bed:{log:1},BE_blockcutter:{log:3},BE_door:{log:1}},q={T_wooden_wall:"wood_wall"},X={T_wooden_wall:"BUILD",BE_bed:"BUILD_ENTITY",BE_blockcutter:"BUILD_ENTITY",BE_door:"BUILD_ENTITY",W_chop:"CHOP_WOOD",W_mine:"CHOP_WOOD",W_harvest:"CHOP_WOOD",W_deconstruct:"CHOP_WOOD",W_plant:"CHOP_WOOD",C_generic:"CRAFT"},J=new Set(["W_chop","W_mine","W_deconstruct","T_wooden_wall"]);class Q{constructor(t,i,n,s,r){this.x=t,this.y=i,this.bp_str_token=n,this.bp_str_sub_token=s,this.inventory=new et,this.desired_inventory=s?e[s].items_needed:n in V?V[n]:null,this.task_after_item_delivery=n in X?X[n]:null}getKey(){return this.x+" "+this.y}static INVALIDATION_HANDLERS={W_chop:"validateChop",W_mine:"validateMine",W_harvest:"validateHarvest",W_deconstruct:"validateDeconstruct",W_haul:"validateHaul",T_wooden_wall:"validateWoodenWall",W_stockpile:"validateStockpile",W_plant:"validateNull",C_generic:"validateNull"};is_invalidated(){const t=Q.INVALIDATION_HANDLERS[this.bp_str_token];return t?this[t]():!this.bp_str_token.startsWith("BE_")||this.validateBuildingEntity()}validateChop(){const t=Mt.getEntity(this.x,this.y);return!t||!t.is_choppable}validateMine(){return"cliff"!==Mt.getWall(this.x,this.y)}validateHarvest(){const t=Mt.getEntity(this.x,this.y);return!t||!t.is_harvestable}validateDeconstruct(){const t=Mt.getWall(this.x,this.y),e=Mt.getEntity(this.x,this.y),i=t&&"cliff"!==t,n=e&&e.is_deconstructable;return!i&&!n}validateHaul(){return!(Mt.getEntity(this.x,this.y)instanceof N)}validateWoodenWall(){return null!==Mt.getWall(this.x,this.y)}validateStockpile(){return!!Mt.getEntity(this.x,this.y)||!ZONE_MANAGER.grid_location_is_stockpile(this.x,this.y)}validateBuildingEntity(){return null!==Mt.getEntity(this.x,this.y)}validateNull(){return!1}static COMPLETION_HANDLERS={W_chop:"handleChopCompletion",W_mine:"handleMineCompletion",W_harvest:"handleHarvestCompletion",W_deconstruct:"handleDeconstructCompletion",W_plant:"handlePlantCompletion",C_generic:"handleGenericCraftCompletion",BE_blockcutter:"handleBlockcutterCompletion",BE_bed:"handleBedCompletion",BE_door:"handleDoorCompletion"};have_dwarf_finish_blueprint(){const t=Q.COMPLETION_HANDLERS[this.bp_str_token];t?this[t]():this.bp_str_token.startsWith("T")&&this.handleTileCompletion(),Ct.remove_blueprint_by_key(this.getKey())}handleChopCompletion(){if(Mt.getEntity(this.x,this.y).is_choppable){Mt.setEntity(this.x,this.y,null);const t=Math.floor(6*Math.random())+1;for(let e=0;e<t;e++)Mt.dump_one_inventory_item(this.x,this.y,"log",1)}}handleMineCompletion(){"cliff"==Mt.getWall(this.x,this.y)&&(Mt.setWall(this.x,this.y,null),Math.random()>.66&&Mt.dump_one_inventory_item(this.x,this.y,"stone",1))}handleHarvestCompletion(){const t=Mt.getEntity(this.x,this.y);if(t instanceof B){const e=t.get_plant_data();Mt.setEntity(this.x,this.y,null);for(const t in e.crop_yield){const i=e.crop_yield[t];Mt.dump_one_inventory_item(this.x,this.y,t,i)}}else t instanceof F&&(t.growth=0,t.is_harvestable=!1,Mt.dump_one_inventory_item(this.x,this.y,"fruit",6))}handleDeconstructCompletion(){if(null!==Mt.getWall(this.x,this.y)){const t=Z[Mt.getWall(this.x,this.y)].cost;for(const e in t){const i=t[e];Mt.dump_one_inventory_item(this.x,this.y,e,i)}Mt.setWall(this.x,this.y,null)}const t=Mt.getEntity(this.x,this.y);t&&t.is_deconstructable&&Mt.setEntity(this.x,this.y,null)}handlePlantCompletion(){null==Mt.getEntity(this.x,this.y)&&Mt.setEntity(this.x,this.y,new B("POTATO"))}handleGenericCraftCompletion(){const t=e[this.bp_str_sub_token].items_created;for(const e in t)Mt.dump_one_inventory_item(this.x,this.y,e,t[e])}handleBlockcutterCompletion(){Mt.setEntity(this.x,this.y,new U("BLOCK_CUTTER"))}handleBedCompletion(){Mt.setEntity(this.x,this.y,new W(this.x,this.y))}handleDoorCompletion(){Mt.setEntity(this.x,this.y,new G(this.x,this.y))}handleTileCompletion(){Mt.setWall(this.x,this.y,q[this.bp_str_token])}BuildItineraryForDwarf(t){return["W_chop","W_mine","W_harvest","W_deconstruct","W_plant"].includes(this.bp_str_token)?this.BuildItineraryForDwarfSimpleBlueprint(t):["T_wooden_wall","C_generic","BE_bed","BE_blockcutter","BE_door"].includes(this.bp_str_token)?this.BuildItineraryForDwarfDeliveryBlueprint(t):"W_stockpile"==this.bp_str_token?this.BuildItineraryForStockpile(t):"W_haul"==this.bp_str_token?this.BuildItineraryForHaul(t):null}BuildItineraryForDwarfSimpleBlueprint(t){const e=Rt.findPathExtended(t.x,t.y,this.x,this.y,this.can_path_to_adjactent());if(!e)return null;const i=c(e);return i.push(new Tt(X[this.bp_str_token],this.x,this.y)),i}BuildItineraryForDwarfDeliveryBlueprint(t){const e=this.getFirstItemRequired();if(!e)return this.BuildItineraryForDwarfSimpleBlueprint(t);const i=this.getPathToClosestIntanceOfItem(e);if(!i)return null;const n=Rt.findPathExtended(t.x,t.y,i.x,i.y);if(!n)return null;let s=c(n);return s.push(new Tt("PICKUP",i.x,i.y)),s=s.concat(c(i.path_to_bp)),s.push(new Tt("STOCK_BLUEPRINT",this.x,this.y)),s}BuildItineraryForStockpile(t){const e=Mt.getItemsNotInStockpiles(),i=d(),n=[];for(const t of e)i.has(t.x+" "+t.y)||n.push(t);const s=n.sort(((t,e)=>Math.abs(t.x-this.x)+Math.abs(t.y-this.y)-(Math.abs(e.x-this.x)+Math.abs(e.y-this.y))));for(const e of s){const i=Rt.findPath(t.x,t.y,e.x,e.y),n=Rt.findPath(e.x,e.y,this.x,this.y);if(i&&n){let t=c(i);return t.push(new Tt("PICKUP",e.x,e.y)),t=[...t,...c(n)],t.push(new Tt("DUMP",this.x,this.y)),t}}return null}BuildItineraryForHaul(t){const e=ZONE_MANAGER.getClosestEmptyStockpileLocations(this.x,this.y);if(!e)return null;const i=Rt.findPath(t.x,t.y,this.x,this.y),n=Rt.findPath(this.x,this.y,e.x,e.y);if(!i||!n)return null;let s=c(i);return s.push(new Tt("PICKUP_AND_FORGET_BLUEPRINT",this.x,this.y)),s=s.concat(c(n)),s.push(new Tt("DUMP",e.x,e.y)),s}getFirstItemRequired(){const t=this.inventory.getShoppingList(this.desired_inventory);return Object.keys(t).length?Object.keys(t)[0]:null}getPathToClosestIntanceOfItem(t){const e=d(),i=Mt.getItemViaItsKey(t);if(0==i.length)return null;let n=null;for(const t of i){if(e.has(t.x+" "+t.y))continue;const i=Rt.findPathExtended(t.x,t.y,this.x,this.y,this.can_path_to_adjactent());if(i){const e={x:t.x,y:t.y,path_to_bp:i};(null==n||n.path_to_bp.length>e.path_to_bp.length)&&(n=e)}}return n}can_path_to_adjactent(){return J.has(this.bp_str_token)}draw(){Nt.fillStyle="rgba(165,165,165, .5)",Nt.fillRect(this.x*m+3-$t,this.y*m+3-Wt,m-6,m-6)}}class tt{constructor(){this.blueprint_hashmap={}}addBluePrint(t){const e=t.getKey(),i=t.getKey()in this.blueprint_hashmap,n=t.is_invalidated();return!i&&!n&&(this.blueprint_hashmap[e]=t,!0)}get_blueprints_unnassigned_to_character(){const t=[],e={};for(const t of Pt)if(t.itinerary.blueprint){e[t.itinerary.blueprint.getKey()]=1}for(const i in this.blueprint_hashmap){const n=this.blueprint_hashmap[i];n.getKey()in e||t.push(n)}return t}removeInvalidBlueprints(){for(const t in this.blueprint_hashmap){this.blueprint_hashmap[t].is_invalidated()&&this.remove_blueprint_by_key(t)}}remove_blueprint_by_key(t){if(!(t in this.blueprint_hashmap))return;const e=this.blueprint_hashmap[t];for(const t of Pt)t.itinerary.blueprint==e&&t.itinerary.force_idle();delete this.blueprint_hashmap[t]}assign_job_to_a_dwarf(t){const e=this.get_blueprints_unnassigned_to_character().sort(((e,i)=>Math.abs(e.x-t.x)+Math.abs(e.y-t.y)-(Math.abs(i.x-t.x)+Math.abs(i.y-t.y))));for(const i of e){const e=i.BuildItineraryForDwarf(t);if(e)return void t.itinerary.set_itinerary(e,i)}}drawBluePrints(){for(const t in this.blueprint_hashmap){this.blueprint_hashmap[t].draw()}}}class et{#r={};constructor(){}addItem(t,e){t in this.#r?this.#r[t]+=e:this.#r[t]=e}removeItem(t,e){return t in this.#r&&(!(this.#r[t]<e)&&(this.#r[t]-=e,!0))}getShoppingList(t){const e={};for(const i in t){const n=t[i],s=i in this.#r?this.#r[i]:0;s<n&&(e[i]=n-s)}return e}isEmpty(){for(const t in this.#r)if(this.#r[t]>0)return!1;return!0}give_list_of_items_held(){return structuredClone(this.#r)}makeEmpty(){this.#r={}}}var it=null,nt=null,st={};$(".tool_tab").click((function(t){nt=$(this).attr("data-category"),it=null,$(".tool_tab ").removeClass("active"),$(".button-item").removeClass("active"),$(this).addClass("active"),$(".button-list").hide(250);$(document.getElementById(nt)).show(250),nt in st&&$(".button-item[data-name='"+st[nt]+"']").click()})),$(".button-item").click((function(t){$(".button-item").removeClass("active");const e=$(this).attr("data-name");it===e?it=null:(it=e,$(this).addClass("active")),st[nt]=it}));let rt=[],ot=0;function at(t,e){lt(t,e);const i=$("#menu_offset").html('<div class = "menu-header" id = "rhs-tab-container"> </div>\n <div class = "menu-body" id = "rhs-content-container"> </div>');$tab_header=$("#rhs-tab-container");let n=0;for(selection of rt){let t="";t=selection instanceof At?"D":selection instanceof St?"A":selection instanceof C?"E":"Z",$tab_header.append($("<div>").addClass("tab").attr("ref",n).text(t).click(ht)),n++}$tab_header.append($("<div>").addClass("close-btn").text("x").click((function(){$("#menu_offset").hide()}))),rt.length?($tab_header.children().first().click(),i.show(),ot=0):i.hide()}function lt(t,e){rt=[];for(const i of Pt)i.x==t&&i.y==e&&rt.push(i);for(const i of Lt.animals)i.x==t&&i.y==e&&rt.push(i);Mt.getEntity(t,e)&&rt.push(Mt.getEntity(t,e)),ZONE_MANAGER.getZoneAtTile(t,e)&&rt.push(ZONE_MANAGER.getZoneAtTile(t,e))}function ht(){$(".menu-header").children().removeClass("active"),$(this).addClass("active"),ot=$(this).attr("ref"),_t()}function _t(){const t=rt[ot];if(t){const e=t.render_details_menu();$("#rhs-content-container").empty().append(e)}}let dt=1;$(".time_button").click((function(){dt=$(this).attr("time_factor"),$(".time_button").removeClass("active"),$(this).addClass("active")}));class ct{constructor(t,e,i){this.x=t,this.y=e,this.sprite=i,this.alive=!0}render(){this.sprite?this.sprite.render_sprite(this.x,this.y):(Nt.fillStyle=Nt.fillStyle="rgba(230, 30, 30, 1)",Nt.fillRect(this.x*m+3-$t,this.y*m+3-Wt,m-6,m-6))}render_details_menu(){const t=$("<div>");return t.text(this.constructor.name+"\n"+JSON.stringify(this,null,4)),t}attempt_set_position(t,e){return!!Mt.isWalkable(t,e)&&(this.x=t,this.y=e,!0)}}const ut=12e4,yt=6e4,ft=3e4,pt=24e4,gt=12e4,mt=3e4,xt=12e4,wt=3e4;let Et=1;class bt{constructor(){this.thirst=ut,this.hunger=pt,this.tiredness=xt}on_tick(t,e,i,n){this.thirst-=s.deltaT*Et,this.hunger-=s.deltaT*Et,this.tiredness-=s.deltaT*Et;const r=t.get_last_task_key(),o=["DRINK","EAT"];this.thirst<ft&&!o.includes(r)&&this.set_itinerary_to_manage_thirst()||this.hunger<mt&&!o.includes(r)&&this.set_itinerary_to_manage_hunger(t,e,i)||this.thirst<yt&&t.is_idle()&&this.set_itinerary_to_manage_thirst(t,e,i)||this.hunger<gt&&t.is_idle()&&this.set_itinerary_to_manage_hunger(t,e,i)||this.tiredness<wt&&t.is_idle()&&this.set_itinerary_to_manage_tiredness(t,e,i,n)}set_itinerary_to_manage_thirst(t,e,i){const n=Mt.get_closest_tile_of_type(e,i,"water");if(!n)return!1;const s=c(n),r=n.length?n[n.length-1]:{x:e,y:i};return s.push(new Tt("DRINK",r.x,r.y)),t.set_itinerary(s,null),!0}set_itinerary_to_manage_hunger(t,e,i){const n=Mt.getClosestFoodItem(e,i);if(!n)return!1;const s=c(n),r=n.length?n[n.length-1]:{x:e,y:i};return s.push(new Tt("PICKUP",r.x,r.y)),s.push(new Tt("EAT",r.x,r.y)),t.set_itinerary(s,null),!0}set_itinerary_to_manage_tiredness(t,e,i,n){let s=null;const r=z.find((t=>t.owner==n));if(void 0!==r)s=r;else{const t=z.find((t=>null==t.owner));if(null==t)return!1;s=t}const o=Rt.findPath(e,i,s.x,s.y);if(!o)return!1;const a=c(o);return a.push(new Tt("SLEEP",s.x,s.y)),t.set_itinerary(a,null),s.owner=n,!0}render(){const t=$("<div>").addClass("needs-container"),e=this._createNeedBar("Hydrated",this.thirst,ut),i=this._createNeedBar("Fed",this.hunger,pt),n=this._createNeedBar("Rested",this.tiredness,xt);return t.append(e,i,n),t}_createNeedBar(t,e,i){const n=$("<div>").addClass("need-bar-container").attr("data-need-name",t),s=$("<div>").addClass("need-bar-label").text(t);n.append(s);const r=$("<div>").addClass("need-bar").attr("data-need-name",t),o=e/i*100;return r.css({width:`${o}%`,backgroundColor:(t=>{if(t>=50){const e=(t-50)/50;return`rgb(${Math.round(230-185*e)}, ${Math.round(230-130*e)}, 0)`}{const e=t/50;return`rgb(${Math.round(204+26*e)}, ${Math.round(0+230*e)}, 0)`}})(o)}),n.append(r),n}}class Tt{constructor(t,e,i,n){this.task_key=t,this.x=e,this.y=i,this.moving_entity=n}}class vt{constructor(){this.task_list=[],this.blueprint=null}set_itinerary(t,e){this.task_list_has_been_emptied(),this.task_list=t,this.blueprint=e}get_next_task(){return this.task_list.length?this.task_list[0]:null}get_last_task_key(){return this.task_list.length?this.task_list[this.task_list.length-1].task_key:null}shift(){this.task_list.shift(),this.task_list.length||this.task_list_has_been_emptied()}task_list_has_been_emptied(){this.blueprint=null}is_idle(){return 0==this.task_list.length}force_idle(){this.task_list=[],this.task_list_has_been_emptied()}}const kt=7;class At extends ct{constructor(t,e){super(t,e,ALL_LOADED_SPRITES.dorf),this.name=p(I),this.needs=new bt,this.inventory=new et,this.itinerary=new vt(this),this.banked_time=0}update_dwarf(){this.make_unstuck(),this.needs.on_tick(this.itinerary,this.x,this.y,this),this.undertake_task_if_exists(),this.itinerary.is_idle()&&!this.inventory.isEmpty()&&Mt.dump_inventory(this.x,this.y,this.inventory),this.itinerary.is_idle()}static TASK_HANDLERS={GO_TO:"handleGoTo",DRINK:"handleDrink",EAT:"handleEat",SLEEP:"handleSleep",CHOP_WOOD:"handleChopWood",PICKUP:"handlePickup",DUMP:"handleDump",PICKUP_AND_FORGET_BLUEPRINT:"handlePickupAndForgetBlueprint",STOCK_BLUEPRINT:"handleStockBlueprint",BUILD:"handleBuildOrCraft",CRAFT:"handleBuildOrCraft",BUILD_ENTITY:"handleBuildOrCraft",GO_TO_MOVING_ENTITY:"handleGoToMovingEntity",SLAUGHTER_ANIMAL:"handleSlaughter",CARRY_ANIMAL_TO_POINT:"handleRopeAnimal"};undertake_task_if_exists(){const t=this.itinerary.get_next_task();if(!t)return;null==t.moving_entity&&(Math.abs(this.x-t.x)>1||Math.abs(this.y-t.y)>1)&&this.itinerary.force_idle();const e=At.TASK_HANDLERS[t.task_key];e?this[e](t):this.itinerary.force_idle()}handleGoTo(t){this.banked_time+=s.deltaT;const e=1e3/7;this.banked_time>=e&&(this.attempt_set_position(t.x,t.y)?(this.itinerary.shift(),this.banked_time-=e):this.itinerary.force_idle())}handleGoToMovingEntity(t){this.banked_time+=s.deltaT;const e=1e3/7;if(this.banked_time>=e){const i=Rt.findPathExtended(this.x,this.y,t.moving_entity.x,t.moving_entity.y,!0);if(!i)return void this.itinerary.force_idle();this.banked_time-=e,0==i.length?this.itinerary.shift():(this.x=i[0].x,this.y=i[0].y)}}handleRopeAnimal(t){this.banked_time+=s.deltaT;const e=1e3/7;if(this.banked_time>=e){const i=Rt.findPath(this.x,this.y,t.x,t.y,!1);if(!i)return void this.itinerary.force_idle();this.banked_time-=e,t.moving_entity.x=this.x,t.moving_entity.y=this.y,0==i.length?(this.itinerary.shift(),t.moving_entity.carry_to_zone=null,t.moving_entity.x=this.x,t.moving_entity.y=this.y):(t.moving_entity.x=this.x,t.moving_entity.y=this.y,this.x=i[0].x,this.y=i[0].y)}}handleDrink(t){"water"==Mt.getTile(this.x,this.y)&&(this.needs.thirst=ut),this.itinerary.shift()}handleEat(t){this.needs.hunger=pt,this.inventory.makeEmpty(),this.itinerary.shift()}handleChopWood(t){this.itinerary.blueprint&&this.itinerary.blueprint.have_dwarf_finish_blueprint(),this.itinerary.shift()}handlePickup(t){const e=Mt.getEntity(t.x,t.y);e instanceof N&&(this.inventory.addItem(e.item_id,e.item_count),Mt.setEntity(this.x,this.y,null)),this.itinerary.shift()}handleStockBlueprint(t){const e=this.itinerary.blueprint;if(null!==e){const t=e.inventory.getShoppingList(e.desired_inventory),i=this.inventory.give_list_of_items_held();for(const n in t){const s=t[n];if(i.hasOwnProperty(n)){const t=i[n],r=Math.min(t,s);this.inventory.removeItem(n,r),e.inventory.addItem(n,r)}}}this.itinerary.shift()}handleBuildOrCraft(t){const e=this.itinerary.blueprint;if(e&&e instanceof Q){const t=e.inventory.getShoppingList(e.desired_inventory);0===Object.keys(t).length&&e.have_dwarf_finish_blueprint()}this.itinerary.shift()}handleDump(t){Mt.dump_inventory(this.x,this.y,this.inventory),this.itinerary.shift()}handleSleep(t){this.needs.tiredness=xt,this.itinerary.shift()}handlePickupAndForgetBlueprint(t){const e=Mt.getEntity(t.x,t.y);e instanceof N&&(this.inventory.addItem(e.item_id,e.item_count),Mt.setEntity(this.x,this.y,null)),this.itinerary.blueprint=null,this.itinerary.shift()}handleSlaughter(t){t.moving_entity.handle_slaughter(),this.itinerary.shift()}make_unstuck(){if(Mt.getCostToMoveThroughTile(this.x,this.y)!==1/0)return;const t=[[0,1],[1,0],[0,-1],[-1,0]];for(const[e,i]of t){const t=this.x+e,n=this.y+i;if(_(t,n)&&Mt.getCostToMoveThroughTile(t,n)!==1/0)return[this.x,this.y]=[t,n],void this.itinerary.force_idle()}}render_details_menu(){const t=$("<div>");return t.append("<h1>").text(this.name),t.append(this.needs.render()),t}render(){super.render(),this.render_itinerary()}render_itinerary(){if(0==this.itinerary.task_list.length||this.itinerary.task_list[0].moving_entity)return;Nt.strokeStyle="rgba(255, 255, 255, 0.25)",Nt.fillStyle="rgba(255, 255, 255, 0.25)";let[t,e]=[this.x,this.y];for(const i of this.itinerary.task_list)"GO_TO"==i.task_key?(Nt.beginPath(),Nt.moveTo((t+.5)*m-$t,(e+.5)*m-Wt),Nt.lineTo((i.x+.5)*m-$t,(i.y+.5)*m-Wt),Nt.stroke()):Nt.fillRect(i.x*m+8-$t,i.y*m+8-Wt,m-16,m-16),[t,e]=[i.x,i.y]}}ANIMAL_TILES_PER_SECOND=7/4,TIME_FOR_EGG_MAXIMUM=3e4;class St extends ct{constructor(t,e){super(t,e,ALL_LOADED_SPRITES.chicken),this.banked_time=0,this.egg_time_elapsed=0,this.slaughter=!1,this.carry_to_zone=null}tick(){if(this.banked_time+=s.deltaT,this.banked_time>1e3/ANIMAL_TILES_PER_SECOND){const t=v[Math.floor(Math.random()*v.length)];let e=this.x+t.x,i=this.y+t.y;(e<0||e>=x)&&(e=this.x),(i<0||i>=w)&&(i=this.y);ZONE_MANAGER.getZoneAtTile(this.x,this.y)==ZONE_MANAGER.getZoneAtTile(e,i)&&this.attempt_set_position(e,i)&&(this.banked_time-=1e3/ANIMAL_TILES_PER_SECOND)}this.egg_time_elapsed+=s.deltaT,this.egg_time_elapsed>=TIME_FOR_EGG_MAXIMUM&&(this.egg_time_elapsed-=TIME_FOR_EGG_MAXIMUM,Mt.dump_one_inventory_item(this.x,this.y,"egg",1));0==this.getDwarvesAssignedToThis().length&&(this.slaughter?this.assignDwarfToSlaughter():this.carry_to_zone&&this.assignDwarfToMoveAnimal())}getDwarvesAssignedToThis(){return Pt.filter((t=>t.itinerary.task_list.length&&t.itinerary.task_list[0].moving_entity==this))}assignDwarfToSlaughter(){for(const t of Pt)if(t.itinerary.is_idle()){const e=[new Tt("GO_TO_MOVING_ENTITY",null,null,this),new Tt("SLAUGHTER_ANIMAL",null,null,this)];return void t.itinerary.set_itinerary(e,null)}}assignDwarfToMoveAnimal(){for(const t of Pt)if(t.itinerary.is_idle()){const e=this.carry_to_zone.tiles[Math.floor(Math.random()*this.carry_to_zone.tiles.length)],i=[new Tt("GO_TO_MOVING_ENTITY",null,null,this),new Tt("CARRY_ANIMAL_TO_POINT",e.x,e.y,this)];return void t.itinerary.set_itinerary(i,null)}}handle_slaughter(){Lt.animals=Lt.animals.filter((t=>t!==this)),this.alive=!1}render_details_menu(){const t=$("<div>");t.text(this.constructor.name+"\n"+JSON.stringify(this,null,4));const e=this.slaughter?"Cancel Slaughter":"Slaughter",i=$("<button>").text(e),n=this;return i.click((function(){n.slaughter=!n.slaughter})),t.append($("<br>"),$("<br>"),i),t}}class It{constructor(){this.animals=[]}addAnimal(t,e){this.animals.push(new St(t,e))}tick(){this.animals.forEach((t=>t.tick()))}render(){this.animals.forEach((t=>t.render()))}}const Lt=new It;Lt.addAnimal(15,12),Lt.addAnimal(15,16),Lt.addAnimal(15,10);class Ot{constructor(){this.grid=Array(w).fill().map((()=>Array(x).fill(0))),this.next_zone_id=1,this.zones={}}add_zone(t,e){const i=this.next_zone_id;this.next_zone_id++,this.zones[i]=new Dt(i,e);for(const e of t)Mt.getCostToMoveThroughTile(e.x,e.y)<1/0&&0==this.grid[e.y][e.x]&&(this.grid[e.y][e.x]=i,this.zones[i].tiles.push(e))}delete_from_zone(t){for(const e of t){const t=this.grid[e.y][e.x];t&&(this.grid[e.y][e.x]=0,this.zones[t].tiles=this.zones[t].tiles.filter((t=>!(e.x==t.x&&e.y==t.y))),0==this.zones[t].tiles.length&&delete this.zones[t])}}iterate_over_zones_tick(){for(const t in this.zones){this.zones[t].tick()}}grid_location_is_stockpile(t,e){if(0==this.grid[e][t])return!1;const i=this.getZoneAtTile(t,e);return"stockpile"===i.zone_type||"p_stockpile"===i.zone_type}getZoneAtTile(t,e){const i=this.grid[e][t];return 0==i?null:i in this.zones?this.zones[i]:null}getClosestEmptyStockpileLocations(t,e){const i=Object.values(this.zones).filter((t=>"stockpile"==t.zone_type||"p_stockpile"==t.zone_type)).flatMap((t=>t.tiles)).filter((t=>null==Mt.getEntity(t.x,t.y)));if(0===i.length)return null;let n=null,s=1/0;for(const r of i){const i=r.x-t,o=r.y-e,a=Math.sqrt(i*i+o*o);a<s&&(s=a,n=r)}return n}draw_zones(){for(let t=0;t<w;t++)for(let e=0;e<x;e++)this.render_single_tile(e,t)}render_single_tile(t,e){if(0==this.grid[e][t])return;const i=this.getZoneAtTile(t,e).zone_type;"stockpile"==i&&(Nt.fillStyle="rgba(125, 125, 255, 0.1)",Nt.strokeStyle="rgba(125, 125, 255, 0.8)"),"p_stockpile"==i?(Nt.fillStyle="rgba(125, 125, 255, 0.1)",Nt.strokeStyle="rgba(125, 125, 255, 0.6)"):"grow"==i?(Nt.fillStyle="rgba(125, 255, 125, 0.1)",Nt.strokeStyle="rgba(125, 255, 125, 0.8)"):(Nt.fillStyle="rgba(255, 255, 255, 0.1)",Nt.strokeStyle="rgba(255, 255, 255, 0.8)");const n=this.grid[e][t];Nt.fillStyle="rgba(125, 125, 255, 0.2)",Nt.fillRect(t*m-$t,e*m-Wt,m,m),Nt.lineWidth=1,e>0&&this.grid[e-1][t]!==n&&(Nt.beginPath(),Nt.moveTo(t*m-$t,e*m-Wt),Nt.lineTo((t+1)*m-$t,e*m-Wt),Nt.stroke()),e<w-1&&this.grid[e+1][t]!==n&&(Nt.beginPath(),Nt.moveTo(t*m-$t,(e+1)*m-Wt),Nt.lineTo((t+1)*m-$t,(e+1)*m-Wt),Nt.stroke()),t>0&&this.grid[e][t-1]!==n&&(Nt.beginPath(),Nt.moveTo(t*m-$t,e*m-Wt),Nt.lineTo(t*m-$t,(e+1)*m-Wt),Nt.stroke()),t<x-1&&this.grid[e][t+1]!==n&&(Nt.beginPath(),Nt.moveTo((t+1)*m-$t,e*m-Wt),Nt.lineTo((t+1)*m-$t,(e+1)*m-Wt),Nt.stroke())}}class Dt{constructor(t,e){this.id=t,this.tiles=[],this.zone_type=e,this.name=g(e)}tick(){if("stockpile"==this.zone_type)for(const t of this.tiles)null==Mt.getEntity(t.x,t.y)&&Ct.addBluePrint(new Q(t.x,t.y,"W_stockpile"));else if("grow"==this.zone_type)for(const t of this.tiles){const e=Mt.getEntity(t.x,t.y);null==e?Ct.addBluePrint(new Q(t.x,t.y,"W_plant")):e instanceof B&&e.is_harvestable&&Ct.addBluePrint(new Q(t.x,t.y,"W_harvest"))}}is_tile_in_zone(t,e){for(const i of this.tiles)if(i.x==t&&i.y==e)return!0;return!1}render_details_menu(){const t=$("<div>"),e=$("<span>").text(this.name).attr("id","rhs_zone_name"),i=$("<input>").attr("id","rhs_zone_name_input").val(this.name).hide(),n=$("<button>").text("Edit").attr("id","rhs_zone_edit"),s=$("<button>").text("Save").attr("id","rhs_zone_save").hide(),r=this;if(n.click((function(){e.hide(),n.hide(),i.show(),s.show()})),s.click((function(){e.show(),n.show(),i.hide(),s.hide(),r.name=i.val(),e.text(i.val())})),t.append(e,i,n,s),"pasture"==this.zone_type){const e=$("<div>"),i=[],n=[];for(const t of Lt.animals)this.is_tile_in_zone(t.x,t.y)?i.push(t):n.push(t);const s=$("<div>").text("In Pasture"),r=$("<div>").text("Outside Pasture");for(const t of i){const e="url("+t.sprite.img.src+")",i=$("<div>").css("background-image",e).addClass("animal_icon");s.append($("<br>"),i)}for(const t of n){const e="url("+t.sprite.img.src+")",i=$("<div>").css("background-image",e).addClass("animal_icon"),n=$("<button>").text("Move"),s=this,o=t;n.click((function(){o.carry_to_zone=s})),r.append($("<br>"),i,n)}e.append(s,r),t.append(e)}return t}}ZONE_MANAGER=new Ot;const Mt=new L,Rt=new O,Ct=new tt,Pt=[new At(3,3),new At(6,6),new At(9,9),new At(12,12)],Bt=document.getElementById("gameCanvas");$(Bt).attr("height",E).attr("width",b);const Nt=Bt.getContext("2d",{alpha:!1});var $t=0,Wt=0;const zt=x*m-b,Gt=w*m-E;let Ft={x:0,y:0};const Ut=4,Kt=.25,Ht=.5,Zt={w:!1,s:!1,a:!1,d:!1};function Yt(){Zt.w?Ft.y=Math.max(Ft.y-Kt*s.deltaTRaw,-Ut):Zt.s?Ft.y=Math.min(Ft.y+Kt*s.deltaTRaw,Ut):Ft.y=Ft.y>0?Math.max(Ft.y-Ht*s.deltaTRaw,0):Math.min(Ft.y+Ht*s.deltaTRaw,0),Zt.a?Ft.x=Math.max(Ft.x-Kt*s.deltaTRaw,-Ut):Zt.d?Ft.x=Math.min(Ft.x+Kt*s.deltaTRaw,Ut):Ft.x=Ft.x>0?Math.max(Ft.x-Ht*s.deltaTRaw,0):Math.min(Ft.x+Ht*s.deltaTRaw,0),$t+=Ft.x*s.deltaTRaw,Wt+=Ft.y*s.deltaTRaw,$t=Math.max(0,Math.min($t,zt)),Wt=Math.max(0,Math.min(Wt,Gt)),$t=Math.floor($t),Wt=Math.floor(Wt)}document.addEventListener("keydown",(t=>{switch(t.key){case"w":Zt.w=!0;break;case"s":Zt.s=!0;break;case"a":Zt.a=!0;break;case"d":Zt.d=!0}})),document.addEventListener("keyup",(t=>{switch(t.key){case"w":Zt.w=!1;break;case"s":Zt.s=!1;break;case"a":Zt.a=!1;break;case"d":Zt.d=!1}})),Bt.addEventListener("mousedown",Xt),Bt.addEventListener("mouseup",Jt),Bt.addEventListener("mouseleave",(function(){jt=!1,Vt=null,qt=null}));var jt=!1,Vt=null,qt=null;function Xt(t){if(0!=t.button)return;const e=Bt.getBoundingClientRect(),i=t.clientX-e.left+$t,n=t.clientY-e.top+Wt,s=Math.floor(i/m),r=Math.floor(n/m);jt=!0,Vt={x:s,y:r},qt={x:s,y:r}}function Jt(t){if(0!=t.button)return;const e=Bt.getBoundingClientRect(),i=t.clientX-e.left+$t,n=t.clientY-e.top+Wt,s=Math.floor(i/m),r=Math.floor(n/m);if(it){if(jt&&Vt){const e=u(Vt.x,Vt.y,s,r);if("zones"==nt&&it)"delete_zone"==it?ZONE_MANAGER.delete_from_zone(e):ZONE_MANAGER.add_zone(e,it);else if("entities"==nt)Qt(s,r,it);else if("orders"==nt)for(const t of e)te(t.x,t.y,it);else for(const i of e)ne(i.x,i.y,t.shiftKey)}}else at(s,r);jt=!1,Vt=null,qt=null}function Qt(t,e,i){const n={bed:(t,e)=>Ct.addBluePrint(new Q(t,e,"BE_bed")),blockcutter:(t,e)=>Ct.addBluePrint(new Q(t,e,"BE_blockcutter")),door:(t,e)=>Ct.addBluePrint(new Q(t,e,"BE_door"))},s=n[i];s&&s(t,e)}function te(t,e,i){const n={chop:(t,e)=>Ct.addBluePrint(new Q(t,e,"W_chop")),mine:(t,e)=>Ct.addBluePrint(new Q(t,e,"W_mine")),harvest:(t,e)=>Ct.addBluePrint(new Q(t,e,"W_harvest")),deconstruct:(t,e)=>Ct.addBluePrint(new Q(t,e,"W_deconstruct")),haul:(t,e)=>Ct.addBluePrint(new Q(t,e,"W_haul")),cancel:(t,e)=>Ct.remove_blueprint_by_key(t+" "+e)},s=n[i];s&&s(t,e)}function ee(){if(jt&&Vt&&qt){const t=u(Vt.x,Vt.y,qt.x,qt.y);for(const e of t)Nt.fillStyle="rgba(255, 255, 255, 0.5)",Nt.fillRect(e.x*m-$t,e.y*m-Wt,m,m)}}function ie(t){t.preventDefault();const e=Bt.getBoundingClientRect(),i=t.clientX-e.left,n=t.clientY-e.top;Math.floor(i/m),Math.floor(n/m)}function ne(t,e,i){"floors"==nt&&null!==it?Mt.setTile(t,e,it):"build"==nt&&null!==it&&Ct.addBluePrint(new Q(t,e,it))}function se(){dt&&(s.updateDeltaT(),Rt.populate_passibility_array(),ae(),le(),Mt.update_all_entities(),Ct.removeInvalidBlueprints(),ZONE_MANAGER.iterate_over_zones_tick(),INDOOR_REGIONS.update_state(),CALENDAR.update(),Lt.tick()),Yt(),re(),window.requestAnimationFrame(se)}function re(){Nt.clearRect(0,0,Bt.width,Bt.height),Mt.render_tiles(),ZONE_MANAGER.draw_zones(),Mt.render_entities(),Ct.drawBluePrints(),Lt.render(),oe(),INDOOR_REGIONS.draw(),ee(),CALENDAR.print_readable_text(),CALENDAR.render_overlay()}function oe(){for(const t of Object.values(Pt))t.render()}function ae(){for(const t of Pt)t.itinerary.is_idle()&&Ct.assign_job_to_a_dwarf(t)}function le(){for(const t of Pt)t.update_dwarf()}Bt.addEventListener("mousemove",(function(t){if(jt&&Vt){const e=Bt.getBoundingClientRect(),i=t.clientX-e.left+$t,n=t.clientY-e.top+Wt,s=Math.floor(i/m),r=Math.floor(n/m);qt={x:s,y:r}}})),Bt.addEventListener("contextmenu",ie),window.requestAnimationFrame(se);
